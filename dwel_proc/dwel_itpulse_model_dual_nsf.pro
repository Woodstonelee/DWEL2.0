pro DWEL_itpulse_model_dual_oz, wavelength, i_val, t_val, r_val, p_range, p_time, itpulse, t_fwhm, r_fwhm
  compile_opt idl2
  
  ;THis routine sets up the model for the iterated DWEL pulse.
  ;Pulses have been set as an empirical model as an array at the step corresponding to 0.5 nsec sampling.
  ;This model may be interpolated to fit any other step size and is controlled by the position and magnitude
  ;of the peak of the pulse - the T_zero point
  ;
  ;Some information:
  ;
  ; Peak occurs at zero range or time with a value of 1.0
  ; FWHM is the sum of pulse values
  ;
  ;INPUTS:
  ;
  ;     wavelength  wavelength of the laser of which the pulse model is needed
  ;     i_val     positions of first,Left 0.0001,peak,trough,secondary peak,Right 0.0001, last points
  ;     t_val     time vale of first,Left 0.0001,peak,trough,secondary peak,Right 0.0001, last points
  ;     r_val     range vale of first,Left 0.0001,peak,trough,secondary peak,Right 0.0001, last points
  ;     p_range   the range ordinates of the model
  ;     p_time    the time ordinates of the model
  ;     pulse     values of the normalised pulse (peak value = 1.0)
  ;
  
  c=0.299792458
  c2=c/2.0
  
  ;; Oz DWEL July 2014
  if (wavelength eq 1064) then begin
    ; Mean pulse model
    p_time=[$
      -40.00,-39.50,-39.00,-38.50,-38.00,-37.50,-37.00,-36.50,-36.00,-35.50,$
      -35.00,-34.50,-34.00,-33.50,-33.00,-32.50,-32.00,-31.50,-31.00,-30.50,$
      -30.00,-29.50,-29.00,-28.50,-28.00,-27.50,-27.00,-26.50,-26.00,-25.50,$
      -25.00,-24.50,-24.00,-23.50,-23.00,-22.50,-22.00,-21.50,-21.00,-20.50,$
      -20.00,-19.50,-19.00,-18.50,-18.00,-17.50,-17.00,-16.50,-16.00,-15.50,$
      -15.00,-14.50,-14.00,-13.50,-13.00,-12.50,-12.00,-11.50,-11.00,-10.50,$
      -10.00,-9.50,-9.00,-8.50,-8.00,-7.50,-7.00,-6.50,-6.00,-5.50,$
      -5.00,-4.50,-4.00,-3.50,-3.00,-2.50,-2.00,-1.50,-1.00,-0.50,$
      0.00,0.50,1.00,1.50,2.00,2.50,3.00,3.50,4.00,4.50,$
      5.00,5.50,6.00,6.50,7.00,7.50,8.00,8.50,9.00,9.50,$
      10.00,10.50,11.00,11.50,12.00,12.50,13.00,13.50,14.00,14.50,$
      15.00,15.50,16.00,16.50,17.00,17.50,18.00,18.50,19.00,19.50,$
      20.00,20.50,21.00,21.50,22.00,22.50,23.00,23.50,24.00,24.50,$
      25.00,25.50,26.00,26.50,27.00,27.50,28.00,28.50,29.00,29.50,$
      30.00,30.50,31.00,31.50,32.00,32.50,33.00,33.50,34.00,34.50,$
      35.00,35.50,36.00,36.50,37.00,37.50,38.00,38.50,39.00,39.50,$
      40.00]
      
    itpulse=[ $
      0.004113, 0.004984, 0.005732, 0.006144, 0.006046, 0.005507, 0.004541, $
      0.003231, 0.001697, -0.000092, -0.001866, -0.003468, -0.004899, -0.005749, $
      -0.005973, -0.005679, -0.004866, -0.003644, -0.002183, -0.000578, 0.000912, $
      0.002307, 0.003456, 0.004197, 0.004432, 0.004112, 0.003361, 0.002205, $
      0.000596, -0.001284, -0.003292, -0.005214, -0.006693, -0.007471, -0.007195, $
      -0.005668, -0.003042, 0.000772, 0.005482, 0.010512, 0.015242, 0.018895, $
      0.020668, 0.020006, 0.016488, 0.010198, 0.001477, -0.008910, -0.019824, $
      -0.029887, -0.037438, -0.040702, -0.038293, -0.029143, -0.013143, 0.009051, $
      0.035761, 0.064272, 0.091319, 0.112719, 0.123921, 0.120901, 0.100634, $
      0.061982, 0.006316, -0.062506, -0.137790, -0.210362, -0.269405, -0.303497, $
      -0.302162, -0.257259, -0.165482, -0.029424, 0.142796, 0.337412, 0.536562, $
      0.720283, 0.868913, 0.965967, 1.000000, 0.965967, 0.868913, 0.720283, $
      0.536563, 0.337412, 0.142796, -0.029424, -0.165482, -0.257259, -0.302162, $
      -0.303497, -0.269405, -0.210362, -0.137790, -0.062506, 0.006316, 0.061982, $
      0.100634, 0.120901, 0.123921, 0.112719, 0.091319, 0.064272, 0.035761, $
      0.009051, -0.013143, -0.029143, -0.038293, -0.040702, -0.037438, -0.029887, $
      -0.019824, -0.008910, 0.001477, 0.010198, 0.016488, 0.020006, 0.020668, $
      0.018895, 0.015242, 0.010512, 0.005482, 0.000772, -0.003042, -0.005668, $
      -0.007195, -0.007471, -0.006693, -0.005214, -0.003292, -0.001284, 0.000596, $
      0.002205, 0.003361, 0.004112, 0.004432, 0.004197, 0.003456, 0.002307, $
      0.000912, -0.000578, -0.002183, -0.003644, -0.004866, -0.005679, -0.005973, $
      -0.005749, -0.004899, -0.003468, -0.001866, -0.000092, 0.001697, 0.003231, $
      0.004541, 0.005507, 0.006046, 0.006144, 0.005732, 0.004984, 0.004113, $
      ]
  endif
  if (wavelength eq 1548) then begin
    ; Mean pulse model
    p_time=[$
      -40.00,-39.50,-39.00,-38.50,-38.00,-37.50,-37.00,-36.50,-36.00,-35.50,$
      -35.00,-34.50,-34.00,-33.50,-33.00,-32.50,-32.00,-31.50,-31.00,-30.50,$
      -30.00,-29.50,-29.00,-28.50,-28.00,-27.50,-27.00,-26.50,-26.00,-25.50,$
      -25.00,-24.50,-24.00,-23.50,-23.00,-22.50,-22.00,-21.50,-21.00,-20.50,$
      -20.00,-19.50,-19.00,-18.50,-18.00,-17.50,-17.00,-16.50,-16.00,-15.50,$
      -15.00,-14.50,-14.00,-13.50,-13.00,-12.50,-12.00,-11.50,-11.00,-10.50,$
      -10.00,-9.50,-9.00,-8.50,-8.00,-7.50,-7.00,-6.50,-6.00,-5.50,$
      -5.00,-4.50,-4.00,-3.50,-3.00,-2.50,-2.00,-1.50,-1.00,-0.50,$
      0.00,0.50,1.00,1.50,2.00,2.50,3.00,3.50,4.00,4.50,$
      5.00,5.50,6.00,6.50,7.00,7.50,8.00,8.50,9.00,9.50,$
      10.00,10.50,11.00,11.50,12.00,12.50,13.00,13.50,14.00,14.50,$
      15.00,15.50,16.00,16.50,17.00,17.50,18.00,18.50,19.00,19.50,$
      20.00,20.50,21.00,21.50,22.00,22.50,23.00,23.50,24.00,24.50,$
      25.00,25.50,26.00,26.50,27.00,27.50,28.00,28.50,29.00,29.50,$
      30.00,30.50,31.00,31.50,32.00,32.50,33.00,33.50,34.00,34.50,$
      35.00,35.50,36.00,36.50,37.00,37.50,38.00,38.50,39.00,39.50,$
      40.00]
      
    itpulse=[ $
      0.005805, 0.005706, 0.004971, 0.003585, 0.001666, -0.000629, -0.003029, $
      -0.005288, -0.007098, -0.008239, -0.008616, -0.008170, -0.006952, -0.005104, $
      -0.002783, -0.000325, 0.002029, 0.004041, 0.005489, 0.006215, 0.006168, $
      0.005435, 0.004095, 0.002282, 0.000207, -0.001920, -0.003864, -0.005378, $
      -0.006339, -0.006631, -0.006223, -0.005107, -0.003333, -0.001031, 0.001623, $
      0.004407, 0.007118, 0.009473, 0.011168, 0.011962, 0.011587, 0.009853, $
      0.006750, 0.002288, -0.003245, -0.009413, -0.015635, -0.021098, -0.024973, $
      -0.026362, -0.024537, -0.018980, -0.009512, 0.003470, 0.019165, 0.036177, $
      0.052663, 0.066416, 0.075037, 0.076289, 0.068252, 0.049873, 0.021290, $
      -0.015890, -0.058543, -0.102061, -0.140625, -0.167707, -0.176626, -0.161238, $
      -0.116911, -0.041462, 0.064226, 0.195995, 0.346297, 0.504869, 0.659418, $
      0.797151, 0.905944, 0.975794, 1.000000, 0.975794, 0.905944, 0.797151, $
      0.659418, 0.504869, 0.346297, 0.195995, 0.064226, -0.041462, -0.116911, $
      -0.161238, -0.176626, -0.167707, -0.140625, -0.102061, -0.058543, -0.015890, $
      0.021290, 0.049873, 0.068252, 0.076289, 0.075036, 0.066416, 0.052663, $
      0.036177, 0.019165, 0.003470, -0.009512, -0.018980, -0.024537, -0.026362, $
      -0.024973, -0.021098, -0.015635, -0.009413, -0.003245, 0.002288, 0.006750, $
      0.009853, 0.011587, 0.011962, 0.011168, 0.009473, 0.007118, 0.004407, $
      0.001623, -0.001031, -0.003333, -0.005107, -0.006223, -0.006631, -0.006339, $
      -0.005378, -0.003864, -0.001920, 0.000207, 0.002282, 0.004095, 0.005435, $
      0.006168, 0.006215, 0.005489, 0.004041, 0.002029, -0.000325, -0.002783, $
      -0.005104, -0.006952, -0.008170, -0.008616, -0.008239, -0.007098, -0.005288, $
      -0.003029, -0.000629, 0.001666, 0.003585, 0.004971, 0.005706, 0.005805, $
      ]
  endif
  
  p_range = p_time*c2
  fwhm=total(itpulse,/double)
  t_fwhm=fwhm*(p_time[1]-p_time[0])    ; nanosec
  r_fwhm=fwhm*(p_range[1]-p_range[0])  ; metres
  
  ;find where the left and right 0.0001*peak is
  tmp_I = where(itpulse ge 0.0001)
  tmp = max(itpulse, max_I)
  
  ;=====================================
  ; find the trough and secondary peak
  ; maximum peak location
  tmp = max(itpulse, maxpeakloc)
  maxpeakloc = maxpeakloc[0]
  ; find the three zero-cross points after the maximum peak
  wflen = size(itpulse, /n_elements)
  zero_xloc = where(itpulse[maxpeakloc:wflen-2]*itpulse[maxpeakloc+1:wflen-1] le 0, tmpcount) + maxpeakloc
  ; find the minimum and maximum between the first zero-cross point and the third zero-cross point
  tmp = min(itpulse[zero_xloc[0]:zero_xloc[2]], tmploc)
  troughloc = fix(mean(tmploc)) + zero_xloc[0]
  tmp = max(itpulse[zero_xloc[0]:zero_xloc[2]], tmploc)
  scdpeakloc = fix(mean(tmploc)) + zero_xloc[0]
  ;=====================================
  
  i_val=[0, tmp_I[0],  max_I, troughloc, scdpeakloc, tmp_I[n_elements(tmp_I)-1], n_elements(itpulse)-1]
  
  r_val=[p_range[i_val[0]],p_range[i_val[1]],p_range[i_val[2]], p_range[i_val[3]], p_range[i_val[4]], p_range[i_val[5]],p_range[i_val[6]]]
  t_val=r_val/c2
  
  print,'p_time check=',[p_time[i_val[0]],p_time[i_val[1]],p_time[i_val[2]],p_time[i_val[3]],p_time[i_val[4]],p_time[i_val[5]],p_time[i_val[6]]]
  print,'p_range check=',[p_range[i_val[0]],p_range[i_val[1]],p_range[i_val[2]],p_range[i_val[3]],p_range[i_val[4]],p_range[i_val[5]],p_range[i_val[6]]]
  print,'itpulse check=',[itpulse[i_val[0]],itpulse[i_val[1]],itpulse[i_val[2]],itpulse[i_val[3]],itpulse[i_val[4]],itpulse[i_val[5]],itpulse[i_val[6]]]
  print,'expected number=',strtrim(string(i_val[6]+1),2)+' actual number=',strtrim(string(n_elements(itpulse)),2)
  
  return
end

