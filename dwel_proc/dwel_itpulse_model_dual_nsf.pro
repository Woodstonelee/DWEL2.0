pro dwel_itpulse_model_dual_nsf, wavelength, i_val, t_val, r_val, p_range, p_time, itpulse, t_fwhm, r_fwhm
  compile_opt idl2
  
  ;This routine sets up the model for the iterated DWEL pulse.
  ;
  ;Both wavelegths have the same iterated pulse model from an average of two
  ;iterated pulse models: 1064 cross-correlate 1548, 1548 cross-correlate 1064. 
  ;
  ;Pulses have been set as an empirical model as an array at the step corresponding to 0.5 nsec sampling.
  ;This model may be interpolated to fit any other step size and is controlled by the position and magnitude
  ;of the peak of the pulse - the T_zero point
  ;
  ;Some information:
  ;
  ; Peak occurs at zero range or time with a value of 1.0
  ; FWHM is the sum of pulse values
  ;
  ;INPUTS:
  ;
  ;     wavelength  wavelength of the laser of which the pulse model is needed
  ;     i_val     positions of first,Left 0.0001,peak,trough,secondary peak,Right 0.0001, last points
  ;     t_val     time vale of first,Left 0.0001,peak,trough,secondary peak,Right 0.0001, last points
  ;     r_val     range vale of first,Left 0.0001,peak,trough,secondary peak,Right 0.0001, last points
  ;     p_range   the range ordinates of the model
  ;     p_time    the time ordinates of the model
  ;     pulse     values of the normalised pulse (peak value = 1.0)
  ;
  
  c=0.299792458
  c2=c/2.0
  
  ;; NSF DWEL Oct 2014
  if (wavelength eq 1064) then begin
    ; Mean pulse model of iterated pulses with swopping approach
    p_time=[$
      -40.00,-39.50,-39.00,-38.50,-38.00,-37.50,-37.00,-36.50,-36.00,-35.50,$
      -35.00,-34.50,-34.00,-33.50,-33.00,-32.50,-32.00,-31.50,-31.00,-30.50,$
      -30.00,-29.50,-29.00,-28.50,-28.00,-27.50,-27.00,-26.50,-26.00,-25.50,$
      -25.00,-24.50,-24.00,-23.50,-23.00,-22.50,-22.00,-21.50,-21.00,-20.50,$
      -20.00,-19.50,-19.00,-18.50,-18.00,-17.50,-17.00,-16.50,-16.00,-15.50,$
      -15.00,-14.50,-14.00,-13.50,-13.00,-12.50,-12.00,-11.50,-11.00,-10.50,$
      -10.00,-9.50,-9.00,-8.50,-8.00,-7.50,-7.00,-6.50,-6.00,-5.50,$
      -5.00,-4.50,-4.00,-3.50,-3.00,-2.50,-2.00,-1.50,-1.00,-0.50,$
      0.00,0.50,1.00,1.50,2.00,2.50,3.00,3.50,4.00,4.50,$
      5.00,5.50,6.00,6.50,7.00,7.50,8.00,8.50,9.00,9.50,$
      10.00,10.50,11.00,11.50,12.00,12.50,13.00,13.50,14.00,14.50,$
      15.00,15.50,16.00,16.50,17.00,17.50,18.00,18.50,19.00,19.50,$
      20.00,20.50,21.00,21.50,22.00,22.50,23.00,23.50,24.00,24.50,$
      25.00,25.50,26.00,26.50,27.00,27.50,28.00,28.50,29.00,29.50,$
      30.00,30.50,31.00,31.50,32.00,32.50,33.00,33.50,34.00,34.50,$
      35.00,35.50,36.00,36.50,37.00,37.50,38.00,38.50,39.00,39.50,$
      40.00]
      
    itpulse=[ $
      0.005594, 0.006212, 0.006352, 0.005872, 0.004748, 0.003105, 0.001110, $
      -0.001031, -0.003081, -0.004850, -0.006077, -0.006710, -0.006678, -0.005951, $
      -0.004629, -0.002918, -0.001040, 0.000821, 0.002427, 0.003675, 0.004425, $
      0.004628, 0.004295, 0.003473, 0.002210, 0.000647, -0.001058, -0.002710, $
      -0.004167, -0.005288, -0.005961, -0.006080, -0.005467, -0.004099, -0.002028, $
      0.000651, 0.003796, 0.007129, 0.010354, 0.013026, 0.014773, 0.015126, $
      0.013696, 0.010399, 0.005205, -0.001582, -0.009403, -0.017392, -0.024512, $
      -0.029666, -0.031656, -0.029434, -0.022289, -0.010005, 0.006953, 0.027421, $
      0.049523, 0.070692, 0.087898, 0.097905, 0.097575, 0.084422, 0.057225, $
      0.016554, -0.035033, -0.092957, -0.150595, -0.199852, -0.231921, -0.238173, $
      -0.211496, -0.147356, -0.045208, 0.091119, 0.253512, 0.429811, 0.605207, $
      0.763745, 0.890167, 0.971768, 1.000000, 0.971768, 0.890167, 0.763745, $
      0.605207, 0.429811, 0.253512, 0.091119, -0.045208, -0.147356, -0.211496, $
      -0.238173, -0.231921, -0.199852, -0.150595, -0.092957, -0.035033, 0.016554, $
      0.057225, 0.084422, 0.097575, 0.097905, 0.087898, 0.070692, 0.049523, $
      0.027421, 0.006953, -0.010005, -0.022289, -0.029434, -0.031656, -0.029666, $
      -0.024512, -0.017392, -0.009403, -0.001582, 0.005205, 0.010399, 0.013696, $
      0.015126, 0.014773, 0.013026, 0.010354, 0.007129, 0.003796, 0.000651, $
      -0.002028, -0.004099, -0.005467, -0.006080, -0.005960, -0.005288, -0.004167, $
      -0.002710, -0.001058, 0.000647, 0.002210, 0.003473, 0.004295, 0.004628, $
      0.004425, 0.003675, 0.002427, 0.000821, -0.001040, -0.002918, -0.004629, $
      -0.005951, -0.006678, -0.006710, -0.006077, -0.004850, -0.003081, -0.001031, $
      0.001110, 0.003105, 0.004748, 0.005872, 0.006352, 0.006212, 0.005594]
  endif
  if (wavelength eq 1548) then begin
    ; Mean pulse model
    p_time=[$
      -40.00,-39.50,-39.00,-38.50,-38.00,-37.50,-37.00,-36.50,-36.00,-35.50,$
      -35.00,-34.50,-34.00,-33.50,-33.00,-32.50,-32.00,-31.50,-31.00,-30.50,$
      -30.00,-29.50,-29.00,-28.50,-28.00,-27.50,-27.00,-26.50,-26.00,-25.50,$
      -25.00,-24.50,-24.00,-23.50,-23.00,-22.50,-22.00,-21.50,-21.00,-20.50,$
      -20.00,-19.50,-19.00,-18.50,-18.00,-17.50,-17.00,-16.50,-16.00,-15.50,$
      -15.00,-14.50,-14.00,-13.50,-13.00,-12.50,-12.00,-11.50,-11.00,-10.50,$
      -10.00,-9.50,-9.00,-8.50,-8.00,-7.50,-7.00,-6.50,-6.00,-5.50,$
      -5.00,-4.50,-4.00,-3.50,-3.00,-2.50,-2.00,-1.50,-1.00,-0.50,$
      0.00,0.50,1.00,1.50,2.00,2.50,3.00,3.50,4.00,4.50,$
      5.00,5.50,6.00,6.50,7.00,7.50,8.00,8.50,9.00,9.50,$
      10.00,10.50,11.00,11.50,12.00,12.50,13.00,13.50,14.00,14.50,$
      15.00,15.50,16.00,16.50,17.00,17.50,18.00,18.50,19.00,19.50,$
      20.00,20.50,21.00,21.50,22.00,22.50,23.00,23.50,24.00,24.50,$
      25.00,25.50,26.00,26.50,27.00,27.50,28.00,28.50,29.00,29.50,$
      30.00,30.50,31.00,31.50,32.00,32.50,33.00,33.50,34.00,34.50,$
      35.00,35.50,36.00,36.50,37.00,37.50,38.00,38.50,39.00,39.50,$
      40.00]
      
    itpulse=[ $
      0.005594, 0.006212, 0.006352, 0.005872, 0.004748, 0.003105, 0.001110, $
      -0.001031, -0.003081, -0.004850, -0.006077, -0.006710, -0.006678, -0.005951, $
      -0.004629, -0.002918, -0.001040, 0.000821, 0.002427, 0.003675, 0.004425, $
      0.004628, 0.004295, 0.003473, 0.002210, 0.000647, -0.001058, -0.002710, $
      -0.004167, -0.005288, -0.005961, -0.006080, -0.005467, -0.004099, -0.002028, $
      0.000651, 0.003796, 0.007129, 0.010354, 0.013026, 0.014773, 0.015126, $
      0.013696, 0.010399, 0.005205, -0.001582, -0.009403, -0.017392, -0.024512, $
      -0.029666, -0.031656, -0.029434, -0.022289, -0.010005, 0.006953, 0.027421, $
      0.049523, 0.070692, 0.087898, 0.097905, 0.097575, 0.084422, 0.057225, $
      0.016554, -0.035033, -0.092957, -0.150595, -0.199852, -0.231921, -0.238173, $
      -0.211496, -0.147356, -0.045208, 0.091119, 0.253512, 0.429811, 0.605207, $
      0.763745, 0.890167, 0.971768, 1.000000, 0.971768, 0.890167, 0.763745, $
      0.605207, 0.429811, 0.253512, 0.091119, -0.045208, -0.147356, -0.211496, $
      -0.238173, -0.231921, -0.199852, -0.150595, -0.092957, -0.035033, 0.016554, $
      0.057225, 0.084422, 0.097575, 0.097905, 0.087898, 0.070692, 0.049523, $
      0.027421, 0.006953, -0.010005, -0.022289, -0.029434, -0.031656, -0.029666, $
      -0.024512, -0.017392, -0.009403, -0.001582, 0.005205, 0.010399, 0.013696, $
      0.015126, 0.014773, 0.013026, 0.010354, 0.007129, 0.003796, 0.000651, $
      -0.002028, -0.004099, -0.005467, -0.006080, -0.005960, -0.005288, -0.004167, $
      -0.002710, -0.001058, 0.000647, 0.002210, 0.003473, 0.004295, 0.004628, $
      0.004425, 0.003675, 0.002427, 0.000821, -0.001040, -0.002918, -0.004629, $
      -0.005951, -0.006678, -0.006710, -0.006077, -0.004850, -0.003081, -0.001031, $
      0.001110, 0.003105, 0.004748, 0.005872, 0.006352, 0.006212, 0.005594]
  endif
  
  p_range = p_time*c2
  fwhm=total(itpulse,/double)
  t_fwhm=fwhm*(p_time[1]-p_time[0])    ; nanosec
  r_fwhm=fwhm*(p_range[1]-p_range[0])  ; metres
  
  ;find where the left and right 0.0001*peak is
  tmp_I = where(itpulse ge 0.0001)
  tmp = max(itpulse, max_I)
  
  ;=====================================
  ; find the trough and secondary peak
  ; maximum peak location
  tmp = max(itpulse, maxpeakloc)
  maxpeakloc = maxpeakloc[0]
  ; find the three zero-cross points after the maximum peak
  wflen = size(itpulse, /n_elements)
  zero_xloc = where(itpulse[maxpeakloc:wflen-2]*itpulse[maxpeakloc+1:wflen-1] le 0, tmpcount) + maxpeakloc
  ; find the minimum and maximum between the first zero-cross point and the third zero-cross point
  tmp = min(itpulse[zero_xloc[0]:zero_xloc[2]], tmploc)
  troughloc = fix(mean(tmploc)) + zero_xloc[0]
  tmp = max(itpulse[zero_xloc[0]:zero_xloc[2]], tmploc)
  scdpeakloc = fix(mean(tmploc)) + zero_xloc[0]
  ;=====================================
  
  i_val=[0, tmp_I[0],  max_I, troughloc, scdpeakloc, tmp_I[n_elements(tmp_I)-1], n_elements(itpulse)-1]
  
  r_val=[p_range[i_val[0]],p_range[i_val[1]],p_range[i_val[2]], p_range[i_val[3]], p_range[i_val[4]], p_range[i_val[5]],p_range[i_val[6]]]
  t_val=r_val/c2
  
  print,'p_time check=',[p_time[i_val[0]],p_time[i_val[1]],p_time[i_val[2]],p_time[i_val[3]],p_time[i_val[4]],p_time[i_val[5]],p_time[i_val[6]]]
  print,'p_range check=',[p_range[i_val[0]],p_range[i_val[1]],p_range[i_val[2]],p_range[i_val[3]],p_range[i_val[4]],p_range[i_val[5]],p_range[i_val[6]]]
  print,'itpulse check=',[itpulse[i_val[0]],itpulse[i_val[1]],itpulse[i_val[2]],itpulse[i_val[3]],itpulse[i_val[4]],itpulse[i_val[5]],itpulse[i_val[6]]]
  print,'expected number=',strtrim(string(i_val[6]+1),2)+' actual number=',strtrim(string(n_elements(itpulse)),2)
  
  return
end

